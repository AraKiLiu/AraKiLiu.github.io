<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工程師的呢喃</title>
    <link>https://arakiliu.github.io/</link>
    <description>Recent content on 工程師的呢喃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-th</language>
    <lastBuildDate>Tue, 22 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://arakiliu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using NI USB-GPIB in Raspberry Pi</title>
      <link>https://arakiliu.github.io/2020/12/22/raspi-usb-gpib/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/22/raspi-usb-gpib/</guid>
      <description>更新系統 $ sudo apt-get update $ sudo apt-get upgrade 安裝rpi-source $ sudo apt-get install -y git bc bison flex libssl-dev libncurses5-dev $ sudo apt install raspberrypi-kernel-headers $ sudo wget https://raw.githubusercontent.com/notro/rpi-source/master/rpi-source -O /usr/bin/rpi-source &amp;amp;&amp;amp; sudo chmod +x /usr/bin/rpi-source &amp;amp;&amp;amp; /usr/bin/rpi-source -q --tag-update $ sudo rpi-source 安裝Linux-gpib</description>
    </item>
    
    <item>
      <title>繼承(2)</title>
      <link>https://arakiliu.github.io/2020/12/21/inheritance/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/21/inheritance/</guid>
      <description>python中，所有東西都是物件，每個物件都有他自己的型別(type)。 # parent class / base class class Transportation: def __init__(self): self.exterior = &amp;#34;white&amp;#34; def drive(self): print(&amp;#34;drive method is called.&amp;#34;) # child class / deroved class class Car(Transportation): def move(self): print(&amp;#34;move is method called.&amp;#34;) #</description>
    </item>
    
    <item>
      <title>繼承(1)</title>
      <link>https://arakiliu.github.io/2020/12/17/inheritance/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/17/inheritance/</guid>
      <description>繼承 (Inheritance) 繼承(Inheritance)：父類別跟子類別的階層關係，子類別會有父類別的屬性與方法。 在程式中將各類別共用屬性與方法方在一個獨立類別</description>
    </item>
    
    <item>
      <title>雙底線方法</title>
      <link>https://arakiliu.github.io/2020/12/16/dunder_methods/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/16/dunder_methods/</guid>
      <description>new 與 init class Product: # __new__ 是一个 static method, args 是傳入的参数，為tuple, kwargs為dict def __new__(cls, *args, **kwargs): print(&amp;#39;new method&amp;#39;, args, kwargs) return object.__new__(MyClass) def __init__(self, name, price): self.name = name self.price = price print(&amp;#39;init method&amp;#39;) # 创建一個MyCla</description>
    </item>
    
    <item>
      <title>底線的各種情況與涵義</title>
      <link>https://arakiliu.github.io/2020/12/15/underscore/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/15/underscore/</guid>
      <description>只有一個 底線：程式中不重要的變數，這可以讓以後別人或自己在觀看程式碼時，馬上知道這變數不重要。 for _ in range(10): print(&amp;#39;Hi&amp;#39;) name, _ = &amp;#39;name$age&amp;#39;.split(&amp;#39;$&amp;#39;) 名稱前有一個底線 ：要是希望變</description>
    </item>
    
    <item>
      <title>Scope</title>
      <link>https://arakiliu.github.io/2020/12/14/Scope/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/14/Scope/</guid>
      <description>查找namespace的順序與權限 查找順序 Local -&amp;gt; Enclosed -&amp;gt; Global -&amp;gt; Built-in 低層不能改變高層的值，只能讀取。 x = 1 def outer(): x = 10 outer() print(x) # 1 因為Local沒有x所以會往</description>
    </item>
    
    <item>
      <title>Namespace</title>
      <link>https://arakiliu.github.io/2020/12/11/Namespace/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/11/Namespace/</guid>
      <description>Python中的命名空間是一個字典 (dictionary） ，它的key就是變數名稱，它的值就是那些變數的值。 x = 2 def g(): x = 4 Python中有</description>
    </item>
    
    <item>
      <title>參數的傳遞模式</title>
      <link>https://arakiliu.github.io/2020/12/10/pass-by-reference/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/12/10/pass-by-reference/</guid>
      <description>variable 跟 value 談起 variable 與其 儲存(參考)的 value (object) 是兩個完全不同的東西: variable 是一個抽象的概念，value 是一個實際存在的資料 variable 不是其對應的 value，vair</description>
    </item>
    
    <item>
      <title>Welcome to ArakiLiu Blog</title>
      <link>https://arakiliu.github.io/2020/11/29/hello-world/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/2020/11/29/hello-world/</guid>
      <description>Hello World! “Yeah It&amp;rsquo;s on. ”</description>
    </item>
    
    <item>
      <title></title>
      <link>https://arakiliu.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://arakiliu.github.io/top/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arakiliu.github.io/top/about/</guid>
      <description>劉啟仲 一位對於軟體開發具有相當熱情的工程師，在自動化測試系統規劃與開發擁有10年經驗。</description>
    </item>
    
  </channel>
</rss>
